[{"path":"http://grvanderploeg.com/NPLStoolbox/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 NPLStoolbox authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/articles/MAINHEALTH.html","id":"processing","dir":"Articles","previous_headings":"","what":"Processing","title":"MAINHEALTH","text":"","code":"# Faeces newFaeces = NPLStoolbox::Jakobsen2025$faeces  mask = newFaeces$mode1$subject %in% (NPLStoolbox::Jakobsen2025$faeces$mode1 %>% filter(!is.na(BMI)) %>% select(subject) %>% pull()) newFaeces$data = newFaeces$data[mask,,] newFaeces$mode1 = newFaeces$mode1[mask,] processedFaeces = parafac4microbiome::processDataCube(newFaeces, sparsityThreshold = 0.75, centerMode=1, scaleMode=2)  # Milk newMilk = NPLStoolbox::Jakobsen2025$milkMicrobiome  mask = newMilk$mode1$subject %in% (NPLStoolbox::Jakobsen2025$milkMicrobiome$mode1 %>% filter(!is.na(BMI)) %>% select(subject) %>% pull()) newMilk$data = newMilk$data[mask,,] newMilk$mode1 = newMilk$mode1[mask,] processedMilk = parafac4microbiome::processDataCube(newMilk, sparsityThreshold=0.85, centerMode=1, scaleMode=2)  # Milk metab newMilkMetab = NPLStoolbox::Jakobsen2025$milkMetabolomics  mask = newMilkMetab$mode1$subject %in% (NPLStoolbox::Jakobsen2025$milkMetabolomics$mode1 %>% filter(!is.na(BMI)) %>% select(subject) %>% pull()) newMilkMetab$data = newMilkMetab$data[mask,,] newMilkMetab$mode1 = newMilkMetab$mode1[mask,] processedMilkMetab = parafac4microbiome::processDataCube(newMilkMetab, CLR=FALSE, centerMode=1, scaleMode=2) Y = processedFaeces$mode1$BMI Ycnt = Y - mean(Y) Ynorm_faecal = Ycnt / norm(Ycnt, \"2\")  Y = processedMilk$mode1$BMI Ycnt = Y - mean(Y) Ynorm_milk = Ycnt / norm(Ycnt, \"2\")  Y = processedMilkMetab$mode1$BMI Ycnt = Y - mean(Y) Ynorm_milkMetab = Ycnt / norm(Ycnt, \"2\") CV_faecal = NPLStoolbox::ncrossreg(processedFaeces$data, Ynorm_faecal, maxNumComponents = 5, cvFolds=10) CV_milk = NPLStoolbox::ncrossreg(processedMilk$data, Ynorm_milk, maxNumComponents = 5, cvFolds=10) CV_milkMetab = NPLStoolbox::ncrossreg(processedMilkMetab$data, Ynorm_milkMetab, maxNumComponents = 5, cvFolds=10)  a=CV_faecal$varExp %>% pivot_longer(-numComponents) %>% ggplot(aes(x=as.factor(numComponents),y=value,col=as.factor(name),group=as.factor(name))) + geom_line() + geom_point() + xlab(\"Number of components\") + ylab(\"Variance explained (%)\") + theme(legend.position=\"none\") b=CV_faecal$RMSE %>% ggplot(aes(x=numComponents,y=RMSE)) + geom_line() + geom_point() + xlab(\"Number of components\") + ylab(\"RMSECV\") ggarrange(a,b) # 1 comp a=CV_milk$varExp %>% pivot_longer(-numComponents) %>% ggplot(aes(x=as.factor(numComponents),y=value,col=as.factor(name),group=as.factor(name))) + geom_line() + geom_point() + xlab(\"Number of components\") + ylab(\"Variance explained (%)\") + theme(legend.position=\"none\") b=CV_milk$RMSE %>% ggplot(aes(x=numComponents,y=RMSE)) + geom_line() + geom_point() + xlab(\"Number of components\") + ylab(\"RMSECV\") ggarrange(a,b) # 1 or 2 comps a=CV_milkMetab$varExp %>% pivot_longer(-numComponents) %>% ggplot(aes(x=as.factor(numComponents),y=value,col=as.factor(name),group=as.factor(name))) + geom_line() + geom_point() + xlab(\"Number of components\") + ylab(\"Variance explained (%)\") + theme(legend.position=\"none\") b=CV_milkMetab$RMSE %>% ggplot(aes(x=numComponents,y=RMSE)) + geom_line() + geom_point() + xlab(\"Number of components\") + ylab(\"RMSECV\") ggarrange(a,b) # 1 comp NPLS_faecal = NPLStoolbox::triPLS1(processedFaeces$data, Ynorm_faecal, 1) NPLS_milk = NPLStoolbox::triPLS1(processedMilk$data, Ynorm_milk, 1) NPLS_milkMetab = NPLStoolbox::triPLS1(processedMilkMetab$data, Ynorm_milkMetab, 2) testMetadata = function(model, comp, metadata){   transformedSubjectLoadings = transformPARAFACloadings(model$Fac, 1)[,comp]   transformedSubjectLoadings = transformedSubjectLoadings / norm(transformedSubjectLoadings, \"2\")      result = lm(transformedSubjectLoadings ~ BMI + C.section + Secretor + Lewis + whz.6m, data=metadata$mode1)      # Extract coefficients and confidence intervals   coef_estimates <- summary(result)$coefficients   conf_intervals <- confint(result)      # Remove intercept   coef_estimates <- coef_estimates[rownames(coef_estimates) != \"(Intercept)\", ]   conf_intervals <- conf_intervals[rownames(conf_intervals) != \"(Intercept)\", ]      # Combine into a clean data frame   summary_table <- data.frame(     Term     = rownames(coef_estimates),     Estimate = coef_estimates[, \"Estimate\"] * 1e3,     CI       = paste0(                  conf_intervals[, 1], \" – \",                  conf_intervals[, 2]                ),     P_value  = coef_estimates[, \"Pr(>|t|)\"],     P_adjust = p.adjust(coef_estimates[, \"Pr(>|t|)\"], \"BH\"),     row.names = NULL   )      return(summary_table) }  testMetadata(NPLS_faecal, 1, processedFaeces) #>        Term   Estimate                                        CI      P_value #> 1       BMI   5.898149 0.00344491075499029 – 0.00835138722475675 5.296571e-06 #> 2 C.section  26.215456  -0.0186520767670303 – 0.0710829891553144 2.497335e-01 #> 3  Secretor  18.704297  -0.0122908996607013 – 0.0496994936374461 2.346150e-01 #> 4     Lewis -67.425763    -0.155253390661857 – 0.020401865528336 1.311911e-01 #> 5    whz.6m   1.488789  -0.0102479002724083 – 0.0132254776748785 8.021876e-01 #>       P_adjust #> 1 2.648286e-05 #> 2 3.121669e-01 #> 3 3.121669e-01 #> 4 3.121669e-01 #> 5 8.021876e-01 testMetadata(NPLS_milk, 1, processedMilk) #>        Term    Estimate                                       CI      P_value #> 1       BMI   5.2632203 0.0028082806290875 – 0.00771815987488316 4.271728e-05 #> 2 C.section  22.5298730 -0.0223837277098485 – 0.0674434737293296 3.227116e-01 #> 3  Secretor  10.1431497  -0.0208977465387988 – 0.041184045914344 5.189801e-01 #> 4     Lewis -25.4005435  -0.113265523144618 – 0.0624644361527853 5.682343e-01 #> 5    whz.6m  -0.5937088  -0.012348966843658 – 0.0111615493028556 9.205334e-01 #>       P_adjust #> 1 0.0002135864 #> 2 0.7102929209 #> 3 0.7102929209 #> 4 0.7102929209 #> 5 0.9205334443 testMetadata(NPLS_milkMetab, 1, processedMilkMetab) #>        Term   Estimate                                         CI      P_value #> 1       BMI   8.670681   0.00664584079115655 – 0.0106955221180947 5.530018e-14 #> 2 C.section  11.074774   -0.0258924224871216 – 0.0480419695984113 5.543102e-01 #> 3  Secretor  19.681300  -0.00616028587042244 – 0.0455228862023762 1.342499e-01 #> 4     Lewis -78.258205   -0.166342392359317 – 0.00982598189078401 8.113566e-02 #> 5    whz.6m -12.584073 -0.0222555492384812 – -0.00291259607365677 1.118449e-02 #>       P_adjust #> 1 2.765009e-13 #> 2 5.543102e-01 #> 3 1.678123e-01 #> 4 1.352261e-01 #> 5 2.796123e-02 testMetadata(NPLS_milkMetab, 2, processedMilkMetab) #>        Term     Estimate                                       CI      P_value #> 1       BMI   -0.1981968 -0.002175283642196 – 0.00177888998370945 8.430536e-01 #> 2 C.section  -12.7552845  -0.048850646024158 – 0.0233400770550342 4.856154e-01 #> 3  Secretor -111.0853182  -0.136317456123891 – -0.085853180193343 1.501529e-14 #> 4     Lewis   42.9906785  -0.0430161307912073 – 0.128997487797659 3.244425e-01 #> 5    whz.6m    7.0106029 -0.00243278155702489 – 0.016453987320985 1.442727e-01 #>       P_adjust #> 1 8.430536e-01 #> 2 6.070193e-01 #> 3 7.507646e-14 #> 4 5.407375e-01 #> 5 3.606817e-01 colourCols = c(\"BMI.group\", \"V3\", \"\") legendTitles = c(\"BMI group\", \"Phylum\", \"\") xLabels = c(\"Subject index\", \"Feature index\", \"Time index\") legendColNums = c(3,5,0) arrangeModes = c(TRUE, TRUE, FALSE) continuousModes = c(FALSE,FALSE,TRUE)  parafac4microbiome::plotPARAFACmodel(NPLS_faecal$Fac, processedFaeces, 1, colourCols, legendTitles, xLabels, legendColNums, arrangeModes, continuousModes,   overallTitle = \"Infant faecal microbiome\") parafac4microbiome::plotPARAFACmodel(NPLS_milk$Fac, processedMilk, 1, colourCols, legendTitles, xLabels, legendColNums, arrangeModes, continuousModes,   overallTitle = \"HM microbiome\") parafac4microbiome::plotPARAFACmodel(NPLS_milkMetab$Fac, processedMilkMetab, 2, colourCols, legendTitles, xLabels, legendColNums, arrangeModes, continuousModes, overallTitle = \"HM metabolome\")"},{"path":"http://grvanderploeg.com/NPLStoolbox/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Geert Roelof van der Ploeg. Author, maintainer. Johan Westerhuis. Contributor. Anna Heintz-Buschart. Contributor. Age Smilde. Contributor. University Amsterdam. Copyright holder, funder.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van der Ploeg G (2025). NPLStoolbox: N-Way Partial Least Squares Modelling Multi-Way Data. R package version 1.1.0.9000, https://github.com/GRvanderPloeg/NPLStoolbox.","code":"@Manual{,   title = {NPLStoolbox: N-Way Partial Least Squares Modelling of Multi-Way Data},   author = {Geert Roelof {van der Ploeg}},   year = {2025},   note = {R package version 1.1.0.9000},   url = {https://github.com/GRvanderPloeg/NPLStoolbox}, }"},{"path":[]},{"path":"http://grvanderploeg.com/NPLStoolbox/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"N-Way Partial Least Squares Modelling of Multi-Way Data","text":"NPLStoolbox allows researchers use N-way Partial Least Squares method multi-way data. ncrossreg() allows user identify appropriate number NPLS components data. triPLS1() allows user create NPLS model. npred() allows user predict y new data. package also comes two example datasets: Cornejo2025: clinical observational cohort study 39 transgender persons starting gender-affirming hormone therapy, containing longitudinally measured tongue microbiome, salivary microbiome, salivary cytokine, salivary biochemistry, circulatory hormone levels (doi TBD). Jakobsen2025: observational cohort 169 mother-infant dyads investigating effect maternal obesity human milk infant gut microbiome https://doi.org/10.21203/rs.3.rs-6244750/v1.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"N-Way Partial Least Squares Modelling of Multi-Way Data","text":"basic introduction package using example dataset given vignette(\"Introduction\"). vignette function documentation can found .","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"N-Way Partial Least Squares Modelling of Multi-Way Data","text":"NPLStoolbox package can installed CRAN using:","code":"install.packages(\"NPLStoolbox\")"},{"path":"http://grvanderploeg.com/NPLStoolbox/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"N-Way Partial Least Squares Modelling of Multi-Way Data","text":"can install development version NPLStoolbox GitHub :","code":"# install.packages(\"pak\") pak::pak(\"GRvanderPloeg/NPLStoolbox\")"},{"path":"http://grvanderploeg.com/NPLStoolbox/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"N-Way Partial Least Squares Modelling of Multi-Way Data","text":"","code":"library(parafac4microbiome) library(NPLStoolbox) set.seed(123)  # Process one of the data cubes from Cornejo2025 processedTongue = processDataCube(Cornejo2025$Tongue_microbiome, sparsityThreshold=0.5, considerGroups=TRUE, groupVariable=\"GenderID\", centerMode=1, scaleMode=2)  # Prepare Y: binarized gender identity Y = as.numeric(as.factor(Cornejo2025$Tongue_microbiome$mode1$GenderID)) Ycnt = Y - mean(Y)  # Make a one-component NPLS model model = triPLS1(processedTongue$data, Ycnt, 1)"},{"path":"http://grvanderploeg.com/NPLStoolbox/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"N-Way Partial Least Squares Modelling of Multi-Way Data","text":"encounter unexpected error clear bug, please file issue minimal reproducible example Github. questions types feedback, feel free send email.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Cornejo2025.html","id":null,"dir":"Reference","previous_headings":"","what":"Cornejo2025 longitudinal dataset measured in transgender persons — Cornejo2025","title":"Cornejo2025 longitudinal dataset measured in transgender persons — Cornejo2025","text":"Cornejo2025 longitudinal dataset three-dimensional arrays, subjects mode 1, features mode 2 time mode 3.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Cornejo2025.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cornejo2025 longitudinal dataset measured in transgender persons — Cornejo2025","text":"","code":"Cornejo2025"},{"path":[]},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Cornejo2025.html","id":"-cornejo-","dir":"Reference","previous_headings":"","what":"'Cornejo2025'","title":"Cornejo2025 longitudinal dataset measured in transgender persons — Cornejo2025","text":"list object seven elements: Tongue_microbiome List object tongue longitudinal microbiota data. Salivary_microbiome List object saliva longitudinal microbiota data. Salivary_cytokines List object longitudinal salivary cytokine data. Salivary_biochemistry List object longitudinal salivary biochemistry data. Circulatory_hormones List object longitudinal circulatory hormone data. Clinical_measurements List object longitudinal clinical outcome data. Subject_metadata Matrix subject metadata.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Cornejo2025.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cornejo2025 longitudinal dataset measured in transgender persons — Cornejo2025","text":"TBD","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Jakobsen2025.html","id":null,"dir":"Reference","previous_headings":"","what":"Jakobsen2025 longitudinal dataset measured in mother-infant dyads — Jakobsen2025","title":"Jakobsen2025 longitudinal dataset measured in mother-infant dyads — Jakobsen2025","text":"Jakobsen2025 longitudinal dataset three-dimensional arrays, subjects mode 1, features mode 2 time mode 3.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Jakobsen2025.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jakobsen2025 longitudinal dataset measured in mother-infant dyads — Jakobsen2025","text":"","code":"Jakobsen2025"},{"path":[]},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Jakobsen2025.html","id":"-jakobsen-","dir":"Reference","previous_headings":"","what":"'Jakobsen2025'","title":"Jakobsen2025 longitudinal dataset measured in mother-infant dyads — Jakobsen2025","text":"list object seven elements: faeces List object longitudinal infant faecal microbiota data. milkMicrobiome List object longitudinal HM microbiota data. milkMetabolomics List object longitudinal salivary cytokine data.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/Jakobsen2025.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Jakobsen2025 longitudinal dataset measured in mother-infant dyads — Jakobsen2025","text":"TBD","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/ncrossreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validation of NPLS by classical K-fold CV. — ncrossreg","title":"Cross-validation of NPLS by classical K-fold CV. — ncrossreg","text":"function runs ACMTF-R cross-validation. deterministic K–fold partition used: subjects split order cvFolds groups. fold training set consists folds test set current fold.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/ncrossreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validation of NPLS by classical K-fold CV. — ncrossreg","text":"","code":"ncrossreg(X, y, maxNumComponents = 5, maxIter = 120, cvFolds = dim(X)[1])"},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/ncrossreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validation of NPLS by classical K-fold CV. — ncrossreg","text":"X Centered tensor independent data y Centered dependent variable maxNumComponents Maximum number components investigate (default 5). maxIter Maximum number iterations (default 100). cvFolds Number folds use cross-validation. example, cvFolds 5, subjects deterministically partitioned 5 groups (CV iteration uses 4/5 training 1/5 testing). Default: equal number subjects (.e. jack-knifing).","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/ncrossreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validation of NPLS by classical K-fold CV. — ncrossreg","text":"list two elements: - varExp: tibble variance–explained (X Y) per number components. - RMSE: tibble RMSE (computed unified CV prediction vector) per number components.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/ncrossreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validation of NPLS by classical K-fold CV. — ncrossreg","text":"","code":"set.seed(123) X <- array(rnorm(25 * 5 * 4), dim = c(25, 5, 4)) y <- rnorm(25)  # Random response variable result = ncrossreg(X, y, cvFolds=2, maxNumComponents=2)"},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/npred.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Y for new data by projecting the data onto the latent space defined by an NPLS model. — npred","title":"Predict Y for new data by projecting the data onto the latent space defined by an NPLS model. — npred","text":"Predict Y new data projecting data onto latent space defined NPLS model.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/npred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Y for new data by projecting the data onto the latent space defined by an NPLS model. — npred","text":"","code":"npred(model, newX)"},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/npred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Y for new data by projecting the data onto the latent space defined by an NPLS model. — npred","text":"model NPLS model newX New data organized matrix (Inew x J x K) Inew new subjects","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/npred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Y for new data by projecting the data onto the latent space defined by an NPLS model. — npred","text":"Ypred: vector predicted value(s) Y new data","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/npred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Y for new data by projecting the data onto the latent space defined by an NPLS model. — npred","text":"","code":"Y = as.numeric(as.factor(Cornejo2025$Tongue$mode1$GenderID)) Ycnt = Y - mean(Y) model = triPLS1(Cornejo2025$Tongue$data, Ycnt, numComponents=1) npred(model, Cornejo2025$Tongue$data[1,,]) #>             [,1] #> [1,] -0.00637789"},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/triPLS1.html","id":null,"dir":"Reference","previous_headings":"","what":"Tri-PLS1: three-way PLS regressed onto a y vector — triPLS1","title":"Tri-PLS1: three-way PLS regressed onto a y vector — triPLS1","text":"Tri-PLS1: three-way PLS regressed onto y vector","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/triPLS1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tri-PLS1: three-way PLS regressed onto a y vector — triPLS1","text":"","code":"triPLS1(X, y, numComponents, tol = 1e-10, maxIter = 100)"},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/triPLS1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tri-PLS1: three-way PLS regressed onto a y vector — triPLS1","text":"X Centered tensor independent data y Centered dependent variable numComponents Number components fit tol Relative change loss model converge (default 1e-10). maxIter Maximum number iterations (default 100).","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/triPLS1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tri-PLS1: three-way PLS regressed onto a y vector — triPLS1","text":"Model","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/reference/triPLS1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tri-PLS1: three-way PLS regressed onto a y vector — triPLS1","text":"","code":"set.seed(123) X <- array(rnorm(100 * 5 * 4), dim = c(100, 5, 4))  # Random tensor (100 samples, 5 vars, 4 vars) y <- rnorm(100)  # Random response variable model <- triPLS1(X, y, numComponents = 2)"},{"path":"http://grvanderploeg.com/NPLStoolbox/news/index.html","id":"nplstoolbox-development-version","dir":"Changelog","previous_headings":"","what":"NPLStoolbox (development version)","title":"NPLStoolbox (development version)","text":"Temp","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/news/index.html","id":"nplstoolbox-110","dir":"Changelog","previous_headings":"","what":"NPLStoolbox 1.1.0","title":"NPLStoolbox 1.1.0","text":"Addition Jakobsen2025 dataset. Addition TIFN2, MAINHEALTH, GOHTRANS, AP articles. Renamed Cornejo2025_analysis vignette Introduction. Inclusion revdepcheck results.","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/news/index.html","id":"nplstoolbox-100","dir":"Changelog","previous_headings":"","what":"NPLStoolbox 1.0.0","title":"NPLStoolbox 1.0.0","text":"CRAN release: 2025-06-10 Full release package: check triPLS1() Cornejo2025 details. blood hormone data block Cornejo2025 renamed circulatory hormones. Example code ncrossreg() sped considerably. DESCRIPTION updated README updated","code":""},{"path":"http://grvanderploeg.com/NPLStoolbox/news/index.html","id":"nplstoolbox-010","dir":"Changelog","previous_headings":"","what":"NPLStoolbox 0.1.0","title":"NPLStoolbox 0.1.0","text":"Added NEWS.md.","code":""}]
